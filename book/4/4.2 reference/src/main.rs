// 4.2. 참조와 대여

fn main() {
    let s1 = String::from("hello");

    let len = calculate_length(&s1); // s1 대신 &s1 전달
    // &s1 구문은 s1 값을 참조하지만 해당 값을 소유하지 않는 참조자를 생성한다.
    // 값을 소유하지 않으므로
    // 이 참조자가 가리킨 값은 참조자가 사용되지 않을 때까지 버려지지 않는다.

    println!("The length of '{}' is {}.", s1, len);

    // 이 앰퍼센드(&) 기호가 참조자를 나타내고,
    // 어떤 값의 소유권을 가져오지 않고 해당 값을 참조할 수 있도록 해 준다.

    // &를 이용한 참조의 반대는 역참조(dereferencing)라 한다.
    // 역참조 기호는 *이며, 8장에서 몇 번 다뤄보고 15장에서 자세한 내용을 배울 예정이다.
}

fn calculate_length(s: &String) -> usize { // s는 String의 참조자이다.
    s.len()
}   // 여기서 s가 스코프 밖으로 벗어난다.
    // 하지만 참조하는 것을 "소유"하고 있지는 않으므로, 버려지지는 않는다. 